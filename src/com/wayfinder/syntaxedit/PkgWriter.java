/*******************************************************************************
 * Copyright (c) 1999-2010, Vodafone Group Services
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 * 
 *     * Redistributions of source code must retain the above copyright 
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above 
 *       copyright notice, this list of conditions and the following 
 *       disclaimer in the documentation and/or other materials provided 
 *       with the distribution.
 *     * Neither the name of Vodafone Group Services nor the names of its 
 *       contributors may be used to endorse or promote products derived 
 *       from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
 * OF SUCH DAMAGE.
 ******************************************************************************/

package com.wayfinder.syntaxedit;

import java.util.Map;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import org.xml.sax.SAXException;
import java.lang.String;
import java.lang.Throwable;

public class PkgWriter {
    
    private FileOutputStream os;
    private final String lang;
    private final String voice;
    private final String subVoice;
    private String destDir;
    
    public static void writePkgFile(File f, File synFile, 
            final String lang,
            final String voice,
            final String subVoice,
            Map<String, SoundClip> soundClips) throws SAXException {
        PkgWriter p;
        try {
            p = new PkgWriter(f, lang, voice, subVoice);
        } catch (Throwable t) {
            throw new SAXException("Unable to create the file "+f.getName());
        }
        try {
            p.writeHeader();
            p.writeSyntaxLine(synFile);
            p.writeSoundClips(soundClips);
            p.close();
        } catch (Throwable t) {
            throw new SAXException("Unable to write to file "+f.getName());
        }
    }
    
    protected PkgWriter(File f, final String lang, final String voice,
            final String subVoice) throws IOException {
        this.lang=lang;
        this.voice=voice;
        this.subVoice=subVoice;
        destDir = "!:\\system\\apps\\WFAudio"+lang+"_"+voice+"\\";
        os = new FileOutputStream(f);
    }
    
    protected void writeHeader() throws IOException  {
        os.write(
                ("; This file is generated by SyntaxEdit\n" +
                ";\n" +
                ";Languages\n" +
                "&"+lang+"\n" +
                "\n" +
                "; Installation header\n" +
                "#{ \"WFAudio"+lang+"_"+voice+"\" }, (0x101FDB75),4,200,1000\n"+
                "\n"+
                "; Compatible with Series60 release 2 phones\n"+
                "(0x101F7960), 0, 0, 0, {\"Series60ProductID\"}\n"+
                "\n"
                )
                .getBytes()
                );
        
    }
    
    
    protected void close() throws SAXException {
        try {
            os.close();
        } catch (IOException t) {
            throw new SAXException("Close failed", t);
        }
    }
    
    protected void writeSyntaxLine(File synFile) throws IOException {
        os.write(
                (
                "; Syntax file\n"+
                "\"" + synFile.getName()+"\"-" +
                "\"" + destDir + "Syntax_" + subVoice + "\"\n" +
                "\n"
                ).getBytes());
    }
    
    protected void writeSoundClips(Map<String, SoundClip> soundClips)
    throws IOException {
        os.write("; Sound files\n".getBytes());
        for (String name : soundClips.keySet()) {
            os.write(
                    (
                    "\""+soundClips.get(name).getFileName()+".ogg\"-" +
                    destDir + name + ".ogg\n"
                    ).getBytes() );
        }
    }
    
}
